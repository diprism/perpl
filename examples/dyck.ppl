{- Generates n-length strings and counts how many are valid Dyck-1
   strings (that is, the n/2-th Catalan number). -}

data Symbol = L | R;
data List a = Nil | Cons a (List a);
data Nat = Zero | Succ Nat;

-- Generates a random List of length n
define randomList = \ n. case n of
  | Zero -> Nil
  | Succ n' -> Cons (amb L R) (randomList n');

define recognize : List Symbol -> Bool =
  \ ps. run ps Zero;

define run : List Symbol -> Nat -> Bool =
  \ ps. \ c. case ps of
    | Nil -> (case c of Zero -> True | Succ c -> False)
    | Cons p ps -> (case p of
      | L -> run ps (Succ c)
      | R -> (case c of Zero -> False | Succ c -> run ps c));

define length = Succ (Succ Zero);

recognize (randomList length);

-- correct: [3.0, 1.0]
